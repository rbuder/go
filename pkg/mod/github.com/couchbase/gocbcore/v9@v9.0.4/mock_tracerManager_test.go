// Code generated by mockery v1.0.0. DO NOT EDIT.

package gocbcore

import mock "github.com/stretchr/testify/mock"

// mockTracerManager is an autogenerated mock type for the tracerManager type
type mockTracerManager struct {
	mock.Mock
}

// CreateOpTrace provides a mock function with given fields: operationName, parentContext
func (_m *mockTracerManager) CreateOpTrace(operationName string, parentContext RequestSpanContext) *opTracer {
	ret := _m.Called(operationName, parentContext)

	var r0 *opTracer
	if rf, ok := ret.Get(0).(func(string, RequestSpanContext) *opTracer); ok {
		r0 = rf(operationName, parentContext)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*opTracer)
		}
	}

	return r0
}

// StartCmdTrace provides a mock function with given fields: req
func (_m *mockTracerManager) StartCmdTrace(req *memdQRequest) {
	_m.Called(req)
}

// StartHTTPSpan provides a mock function with given fields: req, name
func (_m *mockTracerManager) StartHTTPSpan(req *httpRequest, name string) RequestSpan {
	ret := _m.Called(req, name)

	var r0 RequestSpan
	if rf, ok := ret.Get(0).(func(*httpRequest, string) RequestSpan); ok {
		r0 = rf(req, name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(RequestSpan)
		}
	}

	return r0
}

// StartNetTrace provides a mock function with given fields: req
func (_m *mockTracerManager) StartNetTrace(req *memdQRequest) {
	_m.Called(req)
}
